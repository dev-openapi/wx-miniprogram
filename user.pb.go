// 微信小程序接口-用户信息 weixin-miniprogram

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.6.0
// source: wx-miniprogram/user.proto

package wx_miniprogram

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetPluginOpenPIdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessToken string                    `protobuf:"bytes,1,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"` // 接口调用凭证，该参数为 URL 参数，非 Body 参数。使用access_token或者authorizer_access_token
	Body        *GetPluginOpenPIdReq_Body `protobuf:"bytes,2,opt,name=body,proto3" json:"body,omitempty"`                                  // 通过 wx.pluginLogin 获得的插件用户标志凭证 code，有效时间为5分钟，一个 code 只能获取一次 openpid。
}

func (x *GetPluginOpenPIdReq) Reset() {
	*x = GetPluginOpenPIdReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wx_miniprogram_user_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPluginOpenPIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPluginOpenPIdReq) ProtoMessage() {}

func (x *GetPluginOpenPIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_wx_miniprogram_user_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPluginOpenPIdReq.ProtoReflect.Descriptor instead.
func (*GetPluginOpenPIdReq) Descriptor() ([]byte, []int) {
	return file_wx_miniprogram_user_proto_rawDescGZIP(), []int{0}
}

func (x *GetPluginOpenPIdReq) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *GetPluginOpenPIdReq) GetBody() *GetPluginOpenPIdReq_Body {
	if x != nil {
		return x.Body
	}
	return nil
}

type GetPluginOpenPidRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Errcode int32  `protobuf:"varint,1,opt,name=errcode,proto3" json:"errcode,omitempty"` // 错误码
	Errmsg  string `protobuf:"bytes,2,opt,name=errmsg,proto3" json:"errmsg,omitempty"`    // 错误信息
	Openpid string `protobuf:"bytes,3,opt,name=openpid,proto3" json:"openpid,omitempty"`  // 插件用户的唯一标识。
}

func (x *GetPluginOpenPidRes) Reset() {
	*x = GetPluginOpenPidRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wx_miniprogram_user_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPluginOpenPidRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPluginOpenPidRes) ProtoMessage() {}

func (x *GetPluginOpenPidRes) ProtoReflect() protoreflect.Message {
	mi := &file_wx_miniprogram_user_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPluginOpenPidRes.ProtoReflect.Descriptor instead.
func (*GetPluginOpenPidRes) Descriptor() ([]byte, []int) {
	return file_wx_miniprogram_user_proto_rawDescGZIP(), []int{1}
}

func (x *GetPluginOpenPidRes) GetErrcode() int32 {
	if x != nil {
		return x.Errcode
	}
	return 0
}

func (x *GetPluginOpenPidRes) GetErrmsg() string {
	if x != nil {
		return x.Errmsg
	}
	return ""
}

func (x *GetPluginOpenPidRes) GetOpenpid() string {
	if x != nil {
		return x.Openpid
	}
	return ""
}

type CheckEncryptedDataReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessToken string                      `protobuf:"bytes,1,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"` // 接口调用凭证，该参数为 URL 参数，非 Body 参数。使用access_token或者authorizer_access_token
	Body        *CheckEncryptedDataReq_Body `protobuf:"bytes,2,opt,name=body,proto3" json:"body,omitempty"`
}

func (x *CheckEncryptedDataReq) Reset() {
	*x = CheckEncryptedDataReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wx_miniprogram_user_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckEncryptedDataReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckEncryptedDataReq) ProtoMessage() {}

func (x *CheckEncryptedDataReq) ProtoReflect() protoreflect.Message {
	mi := &file_wx_miniprogram_user_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckEncryptedDataReq.ProtoReflect.Descriptor instead.
func (*CheckEncryptedDataReq) Descriptor() ([]byte, []int) {
	return file_wx_miniprogram_user_proto_rawDescGZIP(), []int{2}
}

func (x *CheckEncryptedDataReq) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *CheckEncryptedDataReq) GetBody() *CheckEncryptedDataReq_Body {
	if x != nil {
		return x.Body
	}
	return nil
}

type CheckEncryptedDataRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Errcode    int32  `protobuf:"varint,1,opt,name=errcode,proto3" json:"errcode,omitempty"` // 错误码
	Errmsg     string `protobuf:"bytes,2,opt,name=errmsg,proto3" json:"errmsg,omitempty"`
	Valid      bool   `protobuf:"varint,3,opt,name=valid,proto3" json:"valid,omitempty"`                             // 是否是合法的数据
	CreateTime int64  `protobuf:"varint,4,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"` // 加密数据生成的时间戳
}

func (x *CheckEncryptedDataRes) Reset() {
	*x = CheckEncryptedDataRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wx_miniprogram_user_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckEncryptedDataRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckEncryptedDataRes) ProtoMessage() {}

func (x *CheckEncryptedDataRes) ProtoReflect() protoreflect.Message {
	mi := &file_wx_miniprogram_user_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckEncryptedDataRes.ProtoReflect.Descriptor instead.
func (*CheckEncryptedDataRes) Descriptor() ([]byte, []int) {
	return file_wx_miniprogram_user_proto_rawDescGZIP(), []int{3}
}

func (x *CheckEncryptedDataRes) GetErrcode() int32 {
	if x != nil {
		return x.Errcode
	}
	return 0
}

func (x *CheckEncryptedDataRes) GetErrmsg() string {
	if x != nil {
		return x.Errmsg
	}
	return ""
}

func (x *CheckEncryptedDataRes) GetValid() bool {
	if x != nil {
		return x.Valid
	}
	return false
}

func (x *CheckEncryptedDataRes) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

type GetPaidUnionidReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessToken   string `protobuf:"bytes,1,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`       // 接口调用凭证，该参数为 URL 参数，非 Body 参数。使用access_token或者authorizer_access_token
	Openid        string `protobuf:"bytes,2,opt,name=openid,proto3" json:"openid,omitempty"`                                    // 支付用户唯一标识
	TransactionId string `protobuf:"bytes,3,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"` // 微信支付订单号
	MchId         string `protobuf:"bytes,4,opt,name=mch_id,json=mchId,proto3" json:"mch_id,omitempty"`                         // 微信支付分配的商户号，和商户订单号配合使用
	OutTradeNo    string `protobuf:"bytes,5,opt,name=out_trade_no,json=outTradeNo,proto3" json:"out_trade_no,omitempty"`        // 微信支付商户订单号，和商户号配合使用
}

func (x *GetPaidUnionidReq) Reset() {
	*x = GetPaidUnionidReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wx_miniprogram_user_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPaidUnionidReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPaidUnionidReq) ProtoMessage() {}

func (x *GetPaidUnionidReq) ProtoReflect() protoreflect.Message {
	mi := &file_wx_miniprogram_user_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPaidUnionidReq.ProtoReflect.Descriptor instead.
func (*GetPaidUnionidReq) Descriptor() ([]byte, []int) {
	return file_wx_miniprogram_user_proto_rawDescGZIP(), []int{4}
}

func (x *GetPaidUnionidReq) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *GetPaidUnionidReq) GetOpenid() string {
	if x != nil {
		return x.Openid
	}
	return ""
}

func (x *GetPaidUnionidReq) GetTransactionId() string {
	if x != nil {
		return x.TransactionId
	}
	return ""
}

func (x *GetPaidUnionidReq) GetMchId() string {
	if x != nil {
		return x.MchId
	}
	return ""
}

func (x *GetPaidUnionidReq) GetOutTradeNo() string {
	if x != nil {
		return x.OutTradeNo
	}
	return ""
}

type GetPaidUnionidRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Errcode int32  `protobuf:"varint,1,opt,name=errcode,proto3" json:"errcode,omitempty"`
	Errmsg  string `protobuf:"bytes,2,opt,name=errmsg,proto3" json:"errmsg,omitempty"`
	Unionid string `protobuf:"bytes,3,opt,name=unionid,proto3" json:"unionid,omitempty"` // 用户唯一标识，调用成功后返回
}

func (x *GetPaidUnionidRes) Reset() {
	*x = GetPaidUnionidRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wx_miniprogram_user_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPaidUnionidRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPaidUnionidRes) ProtoMessage() {}

func (x *GetPaidUnionidRes) ProtoReflect() protoreflect.Message {
	mi := &file_wx_miniprogram_user_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPaidUnionidRes.ProtoReflect.Descriptor instead.
func (*GetPaidUnionidRes) Descriptor() ([]byte, []int) {
	return file_wx_miniprogram_user_proto_rawDescGZIP(), []int{5}
}

func (x *GetPaidUnionidRes) GetErrcode() int32 {
	if x != nil {
		return x.Errcode
	}
	return 0
}

func (x *GetPaidUnionidRes) GetErrmsg() string {
	if x != nil {
		return x.Errmsg
	}
	return ""
}

func (x *GetPaidUnionidRes) GetUnionid() string {
	if x != nil {
		return x.Unionid
	}
	return ""
}

type GetUserEncryptKeyReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessToken string                     `protobuf:"bytes,1,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"` // 接口调用凭证，该参数为 URL 参数，非 Body 参数。使用access_token或者authorizer_access_token
	Body        *GetUserEncryptKeyReq_Body `protobuf:"bytes,2,opt,name=body,proto3" json:"body,omitempty"`
}

func (x *GetUserEncryptKeyReq) Reset() {
	*x = GetUserEncryptKeyReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wx_miniprogram_user_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserEncryptKeyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserEncryptKeyReq) ProtoMessage() {}

func (x *GetUserEncryptKeyReq) ProtoReflect() protoreflect.Message {
	mi := &file_wx_miniprogram_user_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserEncryptKeyReq.ProtoReflect.Descriptor instead.
func (*GetUserEncryptKeyReq) Descriptor() ([]byte, []int) {
	return file_wx_miniprogram_user_proto_rawDescGZIP(), []int{6}
}

func (x *GetUserEncryptKeyReq) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *GetUserEncryptKeyReq) GetBody() *GetUserEncryptKeyReq_Body {
	if x != nil {
		return x.Body
	}
	return nil
}

type GetUserEncryptKeyRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Errcode     int32                           `protobuf:"varint,1,opt,name=errcode,proto3" json:"errcode,omitempty"`
	Errmsg      string                          `protobuf:"bytes,2,opt,name=errmsg,proto3" json:"errmsg,omitempty"`
	KeyInfoList []*GetUserEncryptKeyRes_KeyInfo `protobuf:"bytes,3,rep,name=key_info_list,json=keyInfoList,proto3" json:"key_info_list,omitempty"` // 用户最近三次的加密 key 列表
}

func (x *GetUserEncryptKeyRes) Reset() {
	*x = GetUserEncryptKeyRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wx_miniprogram_user_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserEncryptKeyRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserEncryptKeyRes) ProtoMessage() {}

func (x *GetUserEncryptKeyRes) ProtoReflect() protoreflect.Message {
	mi := &file_wx_miniprogram_user_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserEncryptKeyRes.ProtoReflect.Descriptor instead.
func (*GetUserEncryptKeyRes) Descriptor() ([]byte, []int) {
	return file_wx_miniprogram_user_proto_rawDescGZIP(), []int{7}
}

func (x *GetUserEncryptKeyRes) GetErrcode() int32 {
	if x != nil {
		return x.Errcode
	}
	return 0
}

func (x *GetUserEncryptKeyRes) GetErrmsg() string {
	if x != nil {
		return x.Errmsg
	}
	return ""
}

func (x *GetUserEncryptKeyRes) GetKeyInfoList() []*GetUserEncryptKeyRes_KeyInfo {
	if x != nil {
		return x.KeyInfoList
	}
	return nil
}

type GetPhoneNumberReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessToken string                  `protobuf:"bytes,1,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"` // 接口调用凭证，该参数为 URL 参数，非 Body 参数。使用access_token或者authorizer_access_token
	Body        *GetPhoneNumberReq_Body `protobuf:"bytes,2,opt,name=body,proto3" json:"body,omitempty"`
}

func (x *GetPhoneNumberReq) Reset() {
	*x = GetPhoneNumberReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wx_miniprogram_user_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPhoneNumberReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPhoneNumberReq) ProtoMessage() {}

func (x *GetPhoneNumberReq) ProtoReflect() protoreflect.Message {
	mi := &file_wx_miniprogram_user_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPhoneNumberReq.ProtoReflect.Descriptor instead.
func (*GetPhoneNumberReq) Descriptor() ([]byte, []int) {
	return file_wx_miniprogram_user_proto_rawDescGZIP(), []int{8}
}

func (x *GetPhoneNumberReq) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *GetPhoneNumberReq) GetBody() *GetPhoneNumberReq_Body {
	if x != nil {
		return x.Body
	}
	return nil
}

type GetPhoneNumberRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Errcode   int32                        `protobuf:"varint,1,opt,name=errcode,proto3" json:"errcode,omitempty"`
	Errmsg    string                       `protobuf:"bytes,2,opt,name=errmsg,proto3" json:"errmsg,omitempty"`
	PhoneInfo *GetPhoneNumberRes_PhoneInfo `protobuf:"bytes,3,opt,name=phone_info,json=phoneInfo,proto3" json:"phone_info,omitempty"` // 用户手机号信息
}

func (x *GetPhoneNumberRes) Reset() {
	*x = GetPhoneNumberRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wx_miniprogram_user_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPhoneNumberRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPhoneNumberRes) ProtoMessage() {}

func (x *GetPhoneNumberRes) ProtoReflect() protoreflect.Message {
	mi := &file_wx_miniprogram_user_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPhoneNumberRes.ProtoReflect.Descriptor instead.
func (*GetPhoneNumberRes) Descriptor() ([]byte, []int) {
	return file_wx_miniprogram_user_proto_rawDescGZIP(), []int{9}
}

func (x *GetPhoneNumberRes) GetErrcode() int32 {
	if x != nil {
		return x.Errcode
	}
	return 0
}

func (x *GetPhoneNumberRes) GetErrmsg() string {
	if x != nil {
		return x.Errmsg
	}
	return ""
}

func (x *GetPhoneNumberRes) GetPhoneInfo() *GetPhoneNumberRes_PhoneInfo {
	if x != nil {
		return x.PhoneInfo
	}
	return nil
}

type GetPluginOpenPIdReq_Body struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code string `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
}

func (x *GetPluginOpenPIdReq_Body) Reset() {
	*x = GetPluginOpenPIdReq_Body{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wx_miniprogram_user_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPluginOpenPIdReq_Body) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPluginOpenPIdReq_Body) ProtoMessage() {}

func (x *GetPluginOpenPIdReq_Body) ProtoReflect() protoreflect.Message {
	mi := &file_wx_miniprogram_user_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPluginOpenPIdReq_Body.ProtoReflect.Descriptor instead.
func (*GetPluginOpenPIdReq_Body) Descriptor() ([]byte, []int) {
	return file_wx_miniprogram_user_proto_rawDescGZIP(), []int{0, 0}
}

func (x *GetPluginOpenPIdReq_Body) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

type CheckEncryptedDataReq_Body struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EncryptedMsgHash string `protobuf:"bytes,1,opt,name=encrypted_msg_hash,json=encryptedMsgHash,proto3" json:"encrypted_msg_hash,omitempty"` // 加密数据的sha256，通过Hex（Base16）编码后的字符串
}

func (x *CheckEncryptedDataReq_Body) Reset() {
	*x = CheckEncryptedDataReq_Body{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wx_miniprogram_user_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckEncryptedDataReq_Body) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckEncryptedDataReq_Body) ProtoMessage() {}

func (x *CheckEncryptedDataReq_Body) ProtoReflect() protoreflect.Message {
	mi := &file_wx_miniprogram_user_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckEncryptedDataReq_Body.ProtoReflect.Descriptor instead.
func (*CheckEncryptedDataReq_Body) Descriptor() ([]byte, []int) {
	return file_wx_miniprogram_user_proto_rawDescGZIP(), []int{2, 0}
}

func (x *CheckEncryptedDataReq_Body) GetEncryptedMsgHash() string {
	if x != nil {
		return x.EncryptedMsgHash
	}
	return ""
}

type GetUserEncryptKeyReq_Body struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Openid    string `protobuf:"bytes,1,opt,name=openid,proto3" json:"openid,omitempty"`                        // 	用户的openid
	Signature string `protobuf:"bytes,2,opt,name=signature,proto3" json:"signature,omitempty"`                  // 用 sessionkey 对空字符串签名得到的结果。session_key可通过code2Session接口获得。
	SigMethod string `protobuf:"bytes,3,opt,name=sig_method,json=sigMethod,proto3" json:"sig_method,omitempty"` // 签名方法，只支持 hmac_sha256
}

func (x *GetUserEncryptKeyReq_Body) Reset() {
	*x = GetUserEncryptKeyReq_Body{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wx_miniprogram_user_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserEncryptKeyReq_Body) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserEncryptKeyReq_Body) ProtoMessage() {}

func (x *GetUserEncryptKeyReq_Body) ProtoReflect() protoreflect.Message {
	mi := &file_wx_miniprogram_user_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserEncryptKeyReq_Body.ProtoReflect.Descriptor instead.
func (*GetUserEncryptKeyReq_Body) Descriptor() ([]byte, []int) {
	return file_wx_miniprogram_user_proto_rawDescGZIP(), []int{6, 0}
}

func (x *GetUserEncryptKeyReq_Body) GetOpenid() string {
	if x != nil {
		return x.Openid
	}
	return ""
}

func (x *GetUserEncryptKeyReq_Body) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

func (x *GetUserEncryptKeyReq_Body) GetSigMethod() string {
	if x != nil {
		return x.SigMethod
	}
	return ""
}

type GetUserEncryptKeyRes_KeyInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EncryptKey string `protobuf:"bytes,1,opt,name=encrypt_key,json=encryptKey,proto3" json:"encrypt_key,omitempty"`  // 加密key
	Version    int64  `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty"`                         // key的版本号
	ExpireIn   int64  `protobuf:"varint,3,opt,name=expire_in,json=expireIn,proto3" json:"expire_in,omitempty"`       // 剩余有效时间
	Iv         string `protobuf:"bytes,4,opt,name=iv,proto3" json:"iv,omitempty"`                                    // 加密iv
	CreateTime int64  `protobuf:"varint,5,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"` // 创建 key 的时间戳
}

func (x *GetUserEncryptKeyRes_KeyInfo) Reset() {
	*x = GetUserEncryptKeyRes_KeyInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wx_miniprogram_user_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserEncryptKeyRes_KeyInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserEncryptKeyRes_KeyInfo) ProtoMessage() {}

func (x *GetUserEncryptKeyRes_KeyInfo) ProtoReflect() protoreflect.Message {
	mi := &file_wx_miniprogram_user_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserEncryptKeyRes_KeyInfo.ProtoReflect.Descriptor instead.
func (*GetUserEncryptKeyRes_KeyInfo) Descriptor() ([]byte, []int) {
	return file_wx_miniprogram_user_proto_rawDescGZIP(), []int{7, 0}
}

func (x *GetUserEncryptKeyRes_KeyInfo) GetEncryptKey() string {
	if x != nil {
		return x.EncryptKey
	}
	return ""
}

func (x *GetUserEncryptKeyRes_KeyInfo) GetVersion() int64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *GetUserEncryptKeyRes_KeyInfo) GetExpireIn() int64 {
	if x != nil {
		return x.ExpireIn
	}
	return 0
}

func (x *GetUserEncryptKeyRes_KeyInfo) GetIv() string {
	if x != nil {
		return x.Iv
	}
	return ""
}

func (x *GetUserEncryptKeyRes_KeyInfo) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

type GetPhoneNumberReq_Body struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code string `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"` // 手机号获取凭证
}

func (x *GetPhoneNumberReq_Body) Reset() {
	*x = GetPhoneNumberReq_Body{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wx_miniprogram_user_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPhoneNumberReq_Body) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPhoneNumberReq_Body) ProtoMessage() {}

func (x *GetPhoneNumberReq_Body) ProtoReflect() protoreflect.Message {
	mi := &file_wx_miniprogram_user_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPhoneNumberReq_Body.ProtoReflect.Descriptor instead.
func (*GetPhoneNumberReq_Body) Descriptor() ([]byte, []int) {
	return file_wx_miniprogram_user_proto_rawDescGZIP(), []int{8, 0}
}

func (x *GetPhoneNumberReq_Body) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

type GetPhoneNumberRes_PhoneInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PhoneNumber     string                       `protobuf:"bytes,1,opt,name=phoneNumber,proto3" json:"phoneNumber,omitempty"`         //用户绑定的手机号（国外手机号会有区号）
	PurePhoneNumber string                       `protobuf:"bytes,2,opt,name=purePhoneNumber,proto3" json:"purePhoneNumber,omitempty"` // 没有区号的手机号
	CountryCode     string                       `protobuf:"bytes,3,opt,name=countryCode,proto3" json:"countryCode,omitempty"`         // 区号
	Watermark       *GetPhoneNumberRes_Watermark `protobuf:"bytes,4,opt,name=watermark,proto3" json:"watermark,omitempty"`             // 数据水印
}

func (x *GetPhoneNumberRes_PhoneInfo) Reset() {
	*x = GetPhoneNumberRes_PhoneInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wx_miniprogram_user_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPhoneNumberRes_PhoneInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPhoneNumberRes_PhoneInfo) ProtoMessage() {}

func (x *GetPhoneNumberRes_PhoneInfo) ProtoReflect() protoreflect.Message {
	mi := &file_wx_miniprogram_user_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPhoneNumberRes_PhoneInfo.ProtoReflect.Descriptor instead.
func (*GetPhoneNumberRes_PhoneInfo) Descriptor() ([]byte, []int) {
	return file_wx_miniprogram_user_proto_rawDescGZIP(), []int{9, 0}
}

func (x *GetPhoneNumberRes_PhoneInfo) GetPhoneNumber() string {
	if x != nil {
		return x.PhoneNumber
	}
	return ""
}

func (x *GetPhoneNumberRes_PhoneInfo) GetPurePhoneNumber() string {
	if x != nil {
		return x.PurePhoneNumber
	}
	return ""
}

func (x *GetPhoneNumberRes_PhoneInfo) GetCountryCode() string {
	if x != nil {
		return x.CountryCode
	}
	return ""
}

func (x *GetPhoneNumberRes_PhoneInfo) GetWatermark() *GetPhoneNumberRes_Watermark {
	if x != nil {
		return x.Watermark
	}
	return nil
}

type GetPhoneNumberRes_Watermark struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Appid     string `protobuf:"bytes,1,opt,name=appid,proto3" json:"appid,omitempty"`          // 小程序appid
	Timestamp int64  `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"` // 用户获取手机号操作的时间戳
}

func (x *GetPhoneNumberRes_Watermark) Reset() {
	*x = GetPhoneNumberRes_Watermark{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wx_miniprogram_user_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPhoneNumberRes_Watermark) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPhoneNumberRes_Watermark) ProtoMessage() {}

func (x *GetPhoneNumberRes_Watermark) ProtoReflect() protoreflect.Message {
	mi := &file_wx_miniprogram_user_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPhoneNumberRes_Watermark.ProtoReflect.Descriptor instead.
func (*GetPhoneNumberRes_Watermark) Descriptor() ([]byte, []int) {
	return file_wx_miniprogram_user_proto_rawDescGZIP(), []int{9, 1}
}

func (x *GetPhoneNumberRes_Watermark) GetAppid() string {
	if x != nil {
		return x.Appid
	}
	return ""
}

func (x *GetPhoneNumberRes_Watermark) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

var File_wx_miniprogram_user_proto protoreflect.FileDescriptor

var file_wx_miniprogram_user_proto_rawDesc = []byte{
	0x0a, 0x19, 0x77, 0x78, 0x2d, 0x6d, 0x69, 0x6e, 0x69, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d,
	0x2f, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x11, 0x61, 0x70, 0x69,
	0x2e, 0x77, 0x65, 0x69, 0x78, 0x69, 0x6e, 0x2e, 0x71, 0x71, 0x2e, 0x63, 0x6f, 0x6d, 0x1a, 0x1c,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x95, 0x01, 0x0a,
	0x13, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x4f, 0x70, 0x65, 0x6e, 0x50, 0x49,
	0x64, 0x52, 0x65, 0x71, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x3f, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x77, 0x65, 0x69, 0x78,
	0x69, 0x6e, 0x2e, 0x71, 0x71, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x75,
	0x67, 0x69, 0x6e, 0x4f, 0x70, 0x65, 0x6e, 0x50, 0x49, 0x64, 0x52, 0x65, 0x71, 0x2e, 0x42, 0x6f,
	0x64, 0x79, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x1a, 0x1a, 0x0a, 0x04, 0x42, 0x6f, 0x64, 0x79,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x22, 0x61, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x75, 0x67, 0x69,
	0x6e, 0x4f, 0x70, 0x65, 0x6e, 0x50, 0x69, 0x64, 0x52, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x65,
	0x72, 0x72, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x65, 0x72,
	0x72, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x72, 0x72, 0x6d, 0x73, 0x67, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x65, 0x72, 0x72, 0x6d, 0x73, 0x67, 0x12, 0x18, 0x0a,
	0x07, 0x6f, 0x70, 0x65, 0x6e, 0x70, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6f, 0x70, 0x65, 0x6e, 0x70, 0x69, 0x64, 0x22, 0xb3, 0x01, 0x0a, 0x15, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65,
	0x71, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x41, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x77, 0x65, 0x69, 0x78, 0x69, 0x6e, 0x2e,
	0x71, 0x71, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x45, 0x6e, 0x63, 0x72,
	0x79, 0x70, 0x74, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x2e, 0x42, 0x6f, 0x64,
	0x79, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x1a, 0x34, 0x0a, 0x04, 0x42, 0x6f, 0x64, 0x79, 0x12,
	0x2c, 0x0a, 0x12, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x65, 0x64, 0x5f, 0x6d, 0x73, 0x67,
	0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x65, 0x6e, 0x63,
	0x72, 0x79, 0x70, 0x74, 0x65, 0x64, 0x4d, 0x73, 0x67, 0x48, 0x61, 0x73, 0x68, 0x22, 0x80, 0x01,
	0x0a, 0x15, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x65, 0x64,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x72, 0x72, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x65, 0x72, 0x72, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x72, 0x72, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x65, 0x72, 0x72, 0x6d, 0x73, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x12,
	0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x22, 0xae, 0x01, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x50, 0x61, 0x69, 0x64, 0x55, 0x6e, 0x69, 0x6f,
	0x6e, 0x69, 0x64, 0x52, 0x65, 0x71, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x70, 0x65,
	0x6e, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x70, 0x65, 0x6e, 0x69,
	0x64, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x6d, 0x63, 0x68, 0x5f,
	0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x63, 0x68, 0x49, 0x64, 0x12,
	0x20, 0x0a, 0x0c, 0x6f, 0x75, 0x74, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x6e, 0x6f, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6f, 0x75, 0x74, 0x54, 0x72, 0x61, 0x64, 0x65, 0x4e,
	0x6f, 0x22, 0x5f, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x50, 0x61, 0x69, 0x64, 0x55, 0x6e, 0x69, 0x6f,
	0x6e, 0x69, 0x64, 0x52, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x72, 0x72, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x65, 0x72, 0x72, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x65, 0x72, 0x72, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x65, 0x72, 0x72, 0x6d, 0x73, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x75, 0x6e, 0x69, 0x6f,
	0x6e, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x75, 0x6e, 0x69, 0x6f, 0x6e,
	0x69, 0x64, 0x22, 0xd8, 0x01, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x45, 0x6e,
	0x63, 0x72, 0x79, 0x70, 0x74, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x12, 0x21, 0x0a, 0x0c, 0x61,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x40,
	0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x77, 0x65, 0x69, 0x78, 0x69, 0x6e, 0x2e, 0x71, 0x71, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x4b,
	0x65, 0x79, 0x52, 0x65, 0x71, 0x2e, 0x42, 0x6f, 0x64, 0x79, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79,
	0x1a, 0x5b, 0x0a, 0x04, 0x42, 0x6f, 0x64, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x70, 0x65, 0x6e,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x64,
	0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x1d,
	0x0a, 0x0a, 0x73, 0x69, 0x67, 0x5f, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x73, 0x69, 0x67, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x22, 0xb2, 0x02,
	0x0a, 0x14, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74,
	0x4b, 0x65, 0x79, 0x52, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x72, 0x72, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x65, 0x72, 0x72, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x65, 0x72, 0x72, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x65, 0x72, 0x72, 0x6d, 0x73, 0x67, 0x12, 0x53, 0x0a, 0x0d, 0x6b, 0x65, 0x79, 0x5f,
	0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x2f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x77, 0x65, 0x69, 0x78, 0x69, 0x6e, 0x2e, 0x71, 0x71, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x45, 0x6e, 0x63, 0x72, 0x79,
	0x70, 0x74, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x73, 0x2e, 0x4b, 0x65, 0x79, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x0b, 0x6b, 0x65, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x1a, 0x92, 0x01,
	0x0a, 0x07, 0x4b, 0x65, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x6e, 0x63,
	0x72, 0x79, 0x70, 0x74, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x4b, 0x65, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x5f, 0x69,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x49,
	0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x76, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x76, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x22, 0x91, 0x01, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x3d, 0x0a, 0x04, 0x62,
	0x6f, 0x64, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x77, 0x65, 0x69, 0x78, 0x69, 0x6e, 0x2e, 0x71, 0x71, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x47, 0x65,
	0x74, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x2e,
	0x42, 0x6f, 0x64, 0x79, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x1a, 0x1a, 0x0a, 0x04, 0x42, 0x6f,
	0x64, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x9f, 0x03, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x50, 0x68,
	0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07,
	0x65, 0x72, 0x72, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x65,
	0x72, 0x72, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x72, 0x72, 0x6d, 0x73, 0x67,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x65, 0x72, 0x72, 0x6d, 0x73, 0x67, 0x12, 0x4d,
	0x0a, 0x0a, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x77, 0x65, 0x69, 0x78, 0x69, 0x6e, 0x2e,
	0x71, 0x71, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x73, 0x2e, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x09, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0xc7, 0x01,
	0x0a, 0x09, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x20, 0x0a, 0x0b, 0x70,
	0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x28, 0x0a,
	0x0f, 0x70, 0x75, 0x72, 0x65, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x70, 0x75, 0x72, 0x65, 0x50, 0x68, 0x6f, 0x6e,
	0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x72, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x72, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x4c, 0x0a, 0x09, 0x77, 0x61, 0x74,
	0x65, 0x72, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x77, 0x65, 0x69, 0x78, 0x69, 0x6e, 0x2e, 0x71, 0x71, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x47, 0x65, 0x74, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x2e, 0x57, 0x61, 0x74, 0x65, 0x72, 0x6d, 0x61, 0x72, 0x6b, 0x52, 0x09, 0x77, 0x61,
	0x74, 0x65, 0x72, 0x6d, 0x61, 0x72, 0x6b, 0x1a, 0x3f, 0x0a, 0x09, 0x57, 0x61, 0x74, 0x65, 0x72,
	0x6d, 0x61, 0x72, 0x6b, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x70, 0x70, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x32, 0xdf, 0x06, 0x0a, 0x0b, 0x55, 0x73, 0x65,
	0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0xa3, 0x01, 0x0a, 0x10, 0x47, 0x65, 0x74,
	0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x4f, 0x70, 0x65, 0x6e, 0x50, 0x49, 0x64, 0x12, 0x26, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x77, 0x65, 0x69, 0x78, 0x69, 0x6e, 0x2e, 0x71, 0x71, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x4f, 0x70, 0x65, 0x6e, 0x50,
	0x49, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x26, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x77, 0x65, 0x69, 0x78,
	0x69, 0x6e, 0x2e, 0x71, 0x71, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x75,
	0x67, 0x69, 0x6e, 0x4f, 0x70, 0x65, 0x6e, 0x50, 0x69, 0x64, 0x52, 0x65, 0x73, 0x22, 0x3f, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x39, 0x22, 0x31, 0x2f, 0x77, 0x78, 0x61, 0x2f, 0x67, 0x65, 0x74, 0x70,
	0x6c, 0x75, 0x67, 0x69, 0x6e, 0x6f, 0x70, 0x65, 0x6e, 0x70, 0x69, 0x64, 0x3f, 0x61, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x3d, 0x7b, 0x61, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x7d, 0x3a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x12, 0xb3,
	0x01, 0x0a, 0x12, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x65,
	0x64, 0x44, 0x61, 0x74, 0x61, 0x12, 0x28, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x77, 0x65, 0x69, 0x78,
	0x69, 0x6e, 0x2e, 0x71, 0x71, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x45,
	0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x1a,
	0x28, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x77, 0x65, 0x69, 0x78, 0x69, 0x6e, 0x2e, 0x71, 0x71, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74,
	0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x22, 0x49, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x43, 0x22, 0x3b, 0x2f, 0x77, 0x78, 0x61, 0x2f, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73,
	0x2f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x65, 0x64, 0x6d,
	0x73, 0x67, 0x3f, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x3d,
	0x7b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x7d, 0x3a, 0x04,
	0x62, 0x6f, 0x64, 0x79, 0x12, 0x95, 0x01, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x50, 0x61, 0x69, 0x64,
	0x55, 0x6e, 0x69, 0x6f, 0x6e, 0x69, 0x64, 0x12, 0x24, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x77, 0x65,
	0x69, 0x78, 0x69, 0x6e, 0x2e, 0x71, 0x71, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x47, 0x65, 0x74, 0x50,
	0x61, 0x69, 0x64, 0x55, 0x6e, 0x69, 0x6f, 0x6e, 0x69, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x24, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x77, 0x65, 0x69, 0x78, 0x69, 0x6e, 0x2e, 0x71, 0x71, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x61, 0x69, 0x64, 0x55, 0x6e, 0x69, 0x6f, 0x6e, 0x69, 0x64,
	0x52, 0x65, 0x73, 0x22, 0x37, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x31, 0x12, 0x2f, 0x2f, 0x77, 0x78,
	0x61, 0x2f, 0x67, 0x65, 0x74, 0x70, 0x61, 0x69, 0x64, 0x75, 0x6e, 0x69, 0x6f, 0x6e, 0x69, 0x64,
	0x3f, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x3d, 0x7b, 0x61,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x7d, 0x12, 0xb0, 0x01, 0x0a,
	0x11, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x4b,
	0x65, 0x79, 0x12, 0x27, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x77, 0x65, 0x69, 0x78, 0x69, 0x6e, 0x2e,
	0x71, 0x71, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x45, 0x6e,
	0x63, 0x72, 0x79, 0x70, 0x74, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x27, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x77, 0x65, 0x69, 0x78, 0x69, 0x6e, 0x2e, 0x71, 0x71, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x4b, 0x65,
	0x79, 0x52, 0x65, 0x73, 0x22, 0x49, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x43, 0x22, 0x3b, 0x2f, 0x77,
	0x78, 0x61, 0x2f, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2f, 0x67, 0x65, 0x74, 0x75,
	0x73, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6b, 0x65, 0x79, 0x3f, 0x61, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x3d, 0x7b, 0x61, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x7d, 0x3a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x12,
	0xa8, 0x01, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x12, 0x24, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x77, 0x65, 0x69, 0x78, 0x69, 0x6e, 0x2e,
	0x71, 0x71, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x24, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x77,
	0x65, 0x69, 0x78, 0x69, 0x6e, 0x2e, 0x71, 0x71, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x47, 0x65, 0x74,
	0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x73, 0x22, 0x4a,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x44, 0x22, 0x3c, 0x2f, 0x77, 0x78, 0x61, 0x2f, 0x62, 0x75, 0x73,
	0x69, 0x6e, 0x65, 0x73, 0x73, 0x2f, 0x67, 0x65, 0x74, 0x75, 0x73, 0x65, 0x72, 0x70, 0x68, 0x6f,
	0x6e, 0x65, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x3f, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x3d, 0x7b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x7d, 0x3a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x42, 0x27, 0x5a, 0x25, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x64, 0x65, 0x76, 0x2d, 0x6f, 0x70, 0x65,
	0x6e, 0x61, 0x70, 0x69, 0x2f, 0x77, 0x78, 0x2d, 0x6d, 0x69, 0x6e, 0x69, 0x70, 0x72, 0x6f, 0x67,
	0x72, 0x61, 0x6d, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_wx_miniprogram_user_proto_rawDescOnce sync.Once
	file_wx_miniprogram_user_proto_rawDescData = file_wx_miniprogram_user_proto_rawDesc
)

func file_wx_miniprogram_user_proto_rawDescGZIP() []byte {
	file_wx_miniprogram_user_proto_rawDescOnce.Do(func() {
		file_wx_miniprogram_user_proto_rawDescData = protoimpl.X.CompressGZIP(file_wx_miniprogram_user_proto_rawDescData)
	})
	return file_wx_miniprogram_user_proto_rawDescData
}

var file_wx_miniprogram_user_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_wx_miniprogram_user_proto_goTypes = []interface{}{
	(*GetPluginOpenPIdReq)(nil),          // 0: api.weixin.qq.com.GetPluginOpenPIdReq
	(*GetPluginOpenPidRes)(nil),          // 1: api.weixin.qq.com.GetPluginOpenPidRes
	(*CheckEncryptedDataReq)(nil),        // 2: api.weixin.qq.com.CheckEncryptedDataReq
	(*CheckEncryptedDataRes)(nil),        // 3: api.weixin.qq.com.CheckEncryptedDataRes
	(*GetPaidUnionidReq)(nil),            // 4: api.weixin.qq.com.GetPaidUnionidReq
	(*GetPaidUnionidRes)(nil),            // 5: api.weixin.qq.com.GetPaidUnionidRes
	(*GetUserEncryptKeyReq)(nil),         // 6: api.weixin.qq.com.GetUserEncryptKeyReq
	(*GetUserEncryptKeyRes)(nil),         // 7: api.weixin.qq.com.GetUserEncryptKeyRes
	(*GetPhoneNumberReq)(nil),            // 8: api.weixin.qq.com.GetPhoneNumberReq
	(*GetPhoneNumberRes)(nil),            // 9: api.weixin.qq.com.GetPhoneNumberRes
	(*GetPluginOpenPIdReq_Body)(nil),     // 10: api.weixin.qq.com.GetPluginOpenPIdReq.Body
	(*CheckEncryptedDataReq_Body)(nil),   // 11: api.weixin.qq.com.CheckEncryptedDataReq.Body
	(*GetUserEncryptKeyReq_Body)(nil),    // 12: api.weixin.qq.com.GetUserEncryptKeyReq.Body
	(*GetUserEncryptKeyRes_KeyInfo)(nil), // 13: api.weixin.qq.com.GetUserEncryptKeyRes.KeyInfo
	(*GetPhoneNumberReq_Body)(nil),       // 14: api.weixin.qq.com.GetPhoneNumberReq.Body
	(*GetPhoneNumberRes_PhoneInfo)(nil),  // 15: api.weixin.qq.com.GetPhoneNumberRes.PhoneInfo
	(*GetPhoneNumberRes_Watermark)(nil),  // 16: api.weixin.qq.com.GetPhoneNumberRes.Watermark
}
var file_wx_miniprogram_user_proto_depIdxs = []int32{
	10, // 0: api.weixin.qq.com.GetPluginOpenPIdReq.body:type_name -> api.weixin.qq.com.GetPluginOpenPIdReq.Body
	11, // 1: api.weixin.qq.com.CheckEncryptedDataReq.body:type_name -> api.weixin.qq.com.CheckEncryptedDataReq.Body
	12, // 2: api.weixin.qq.com.GetUserEncryptKeyReq.body:type_name -> api.weixin.qq.com.GetUserEncryptKeyReq.Body
	13, // 3: api.weixin.qq.com.GetUserEncryptKeyRes.key_info_list:type_name -> api.weixin.qq.com.GetUserEncryptKeyRes.KeyInfo
	14, // 4: api.weixin.qq.com.GetPhoneNumberReq.body:type_name -> api.weixin.qq.com.GetPhoneNumberReq.Body
	15, // 5: api.weixin.qq.com.GetPhoneNumberRes.phone_info:type_name -> api.weixin.qq.com.GetPhoneNumberRes.PhoneInfo
	16, // 6: api.weixin.qq.com.GetPhoneNumberRes.PhoneInfo.watermark:type_name -> api.weixin.qq.com.GetPhoneNumberRes.Watermark
	0,  // 7: api.weixin.qq.com.UserService.GetPluginOpenPId:input_type -> api.weixin.qq.com.GetPluginOpenPIdReq
	2,  // 8: api.weixin.qq.com.UserService.CheckEncryptedData:input_type -> api.weixin.qq.com.CheckEncryptedDataReq
	4,  // 9: api.weixin.qq.com.UserService.GetPaidUnionid:input_type -> api.weixin.qq.com.GetPaidUnionidReq
	6,  // 10: api.weixin.qq.com.UserService.GetUserEncryptKey:input_type -> api.weixin.qq.com.GetUserEncryptKeyReq
	8,  // 11: api.weixin.qq.com.UserService.GetPhoneNumber:input_type -> api.weixin.qq.com.GetPhoneNumberReq
	1,  // 12: api.weixin.qq.com.UserService.GetPluginOpenPId:output_type -> api.weixin.qq.com.GetPluginOpenPidRes
	3,  // 13: api.weixin.qq.com.UserService.CheckEncryptedData:output_type -> api.weixin.qq.com.CheckEncryptedDataRes
	5,  // 14: api.weixin.qq.com.UserService.GetPaidUnionid:output_type -> api.weixin.qq.com.GetPaidUnionidRes
	7,  // 15: api.weixin.qq.com.UserService.GetUserEncryptKey:output_type -> api.weixin.qq.com.GetUserEncryptKeyRes
	9,  // 16: api.weixin.qq.com.UserService.GetPhoneNumber:output_type -> api.weixin.qq.com.GetPhoneNumberRes
	12, // [12:17] is the sub-list for method output_type
	7,  // [7:12] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_wx_miniprogram_user_proto_init() }
func file_wx_miniprogram_user_proto_init() {
	if File_wx_miniprogram_user_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_wx_miniprogram_user_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPluginOpenPIdReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wx_miniprogram_user_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPluginOpenPidRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wx_miniprogram_user_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckEncryptedDataReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wx_miniprogram_user_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckEncryptedDataRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wx_miniprogram_user_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPaidUnionidReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wx_miniprogram_user_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPaidUnionidRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wx_miniprogram_user_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserEncryptKeyReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wx_miniprogram_user_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserEncryptKeyRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wx_miniprogram_user_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPhoneNumberReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wx_miniprogram_user_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPhoneNumberRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wx_miniprogram_user_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPluginOpenPIdReq_Body); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wx_miniprogram_user_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckEncryptedDataReq_Body); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wx_miniprogram_user_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserEncryptKeyReq_Body); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wx_miniprogram_user_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserEncryptKeyRes_KeyInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wx_miniprogram_user_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPhoneNumberReq_Body); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wx_miniprogram_user_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPhoneNumberRes_PhoneInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wx_miniprogram_user_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPhoneNumberRes_Watermark); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_wx_miniprogram_user_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_wx_miniprogram_user_proto_goTypes,
		DependencyIndexes: file_wx_miniprogram_user_proto_depIdxs,
		MessageInfos:      file_wx_miniprogram_user_proto_msgTypes,
	}.Build()
	File_wx_miniprogram_user_proto = out.File
	file_wx_miniprogram_user_proto_rawDesc = nil
	file_wx_miniprogram_user_proto_goTypes = nil
	file_wx_miniprogram_user_proto_depIdxs = nil
}
