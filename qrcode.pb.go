// 微信小程序接口-小程序码与小程序连接 weixin-miniprogram

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.6.0
// source: wx-miniprogram/qrcode.proto

package wx_miniprogram

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type LineColor struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	R int32 `protobuf:"varint,1,opt,name=r,proto3" json:"r,omitempty"` // 默认值{"r":0,"g":0,"b":0} ；auto_color 为 false 时生效，使用 rgb 设置颜色 例如 {"r":"xxx","g":"xxx","b":"xxx"} 十进制表示
	G int32 `protobuf:"varint,2,opt,name=g,proto3" json:"g,omitempty"` // 默认值{"r":0,"g":0,"b":0} ；auto_color 为 false 时生效，使用 rgb 设置颜色 例如 {"r":"xxx","g":"xxx","b":"xxx"} 十进制表示
	B int32 `protobuf:"varint,3,opt,name=b,proto3" json:"b,omitempty"` // 默认值{"r":0,"g":0,"b":0} ；auto_color 为 false 时生效，使用 rgb 设置颜色 例如 {"r":"xxx","g":"xxx","b":"xxx"} 十进制表示
}

func (x *LineColor) Reset() {
	*x = LineColor{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wx_miniprogram_qrcode_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LineColor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LineColor) ProtoMessage() {}

func (x *LineColor) ProtoReflect() protoreflect.Message {
	mi := &file_wx_miniprogram_qrcode_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LineColor.ProtoReflect.Descriptor instead.
func (*LineColor) Descriptor() ([]byte, []int) {
	return file_wx_miniprogram_qrcode_proto_rawDescGZIP(), []int{0}
}

func (x *LineColor) GetR() int32 {
	if x != nil {
		return x.R
	}
	return 0
}

func (x *LineColor) GetG() int32 {
	if x != nil {
		return x.G
	}
	return 0
}

func (x *LineColor) GetB() int32 {
	if x != nil {
		return x.B
	}
	return 0
}

type GetQrcodeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessToken string             `protobuf:"bytes,1,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"` // 接口调用凭证，该参数为 URL 参数，非 Body 参数。使用getAccessToken 或者 authorizer_access_token
	Body        *GetQrcodeReq_Body `protobuf:"bytes,2,opt,name=body,proto3" json:"body,omitempty"`
}

func (x *GetQrcodeReq) Reset() {
	*x = GetQrcodeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wx_miniprogram_qrcode_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetQrcodeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetQrcodeReq) ProtoMessage() {}

func (x *GetQrcodeReq) ProtoReflect() protoreflect.Message {
	mi := &file_wx_miniprogram_qrcode_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetQrcodeReq.ProtoReflect.Descriptor instead.
func (*GetQrcodeReq) Descriptor() ([]byte, []int) {
	return file_wx_miniprogram_qrcode_proto_rawDescGZIP(), []int{1}
}

func (x *GetQrcodeReq) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *GetQrcodeReq) GetBody() *GetQrcodeReq_Body {
	if x != nil {
		return x.Body
	}
	return nil
}

type GetQrcodeRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Errcode int32  `protobuf:"varint,1,opt,name=errcode,proto3" json:"errcode,omitempty"`
	Errmsg  string `protobuf:"bytes,2,opt,name=errmsg,proto3" json:"errmsg,omitempty"`
	Buffer  []byte `protobuf:"bytes,3,opt,name=buffer,proto3" json:"buffer,omitempty"` // 成功时返回的图片 Buffer
}

func (x *GetQrcodeRes) Reset() {
	*x = GetQrcodeRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wx_miniprogram_qrcode_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetQrcodeRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetQrcodeRes) ProtoMessage() {}

func (x *GetQrcodeRes) ProtoReflect() protoreflect.Message {
	mi := &file_wx_miniprogram_qrcode_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetQrcodeRes.ProtoReflect.Descriptor instead.
func (*GetQrcodeRes) Descriptor() ([]byte, []int) {
	return file_wx_miniprogram_qrcode_proto_rawDescGZIP(), []int{2}
}

func (x *GetQrcodeRes) GetErrcode() int32 {
	if x != nil {
		return x.Errcode
	}
	return 0
}

func (x *GetQrcodeRes) GetErrmsg() string {
	if x != nil {
		return x.Errmsg
	}
	return ""
}

func (x *GetQrcodeRes) GetBuffer() []byte {
	if x != nil {
		return x.Buffer
	}
	return nil
}

type GetUnlimitedQrcodeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessToken string                      `protobuf:"bytes,1,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"` // 接口调用凭证，该参数为 URL 参数，非 Body 参数。使用getAccessToken 或者 authorizer_access_token
	Body        *GetUnlimitedQrcodeReq_Body `protobuf:"bytes,2,opt,name=body,proto3" json:"body,omitempty"`
}

func (x *GetUnlimitedQrcodeReq) Reset() {
	*x = GetUnlimitedQrcodeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wx_miniprogram_qrcode_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUnlimitedQrcodeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUnlimitedQrcodeReq) ProtoMessage() {}

func (x *GetUnlimitedQrcodeReq) ProtoReflect() protoreflect.Message {
	mi := &file_wx_miniprogram_qrcode_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUnlimitedQrcodeReq.ProtoReflect.Descriptor instead.
func (*GetUnlimitedQrcodeReq) Descriptor() ([]byte, []int) {
	return file_wx_miniprogram_qrcode_proto_rawDescGZIP(), []int{3}
}

func (x *GetUnlimitedQrcodeReq) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *GetUnlimitedQrcodeReq) GetBody() *GetUnlimitedQrcodeReq_Body {
	if x != nil {
		return x.Body
	}
	return nil
}

type GetUnlimitedQrcodeRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Errcode int32  `protobuf:"varint,1,opt,name=errcode,proto3" json:"errcode,omitempty"`
	Errmsg  string `protobuf:"bytes,2,opt,name=errmsg,proto3" json:"errmsg,omitempty"`
	Buffer  []byte `protobuf:"bytes,3,opt,name=buffer,proto3" json:"buffer,omitempty"` // 成功时返回的图片 Buffer
}

func (x *GetUnlimitedQrcodeRes) Reset() {
	*x = GetUnlimitedQrcodeRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wx_miniprogram_qrcode_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUnlimitedQrcodeRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUnlimitedQrcodeRes) ProtoMessage() {}

func (x *GetUnlimitedQrcodeRes) ProtoReflect() protoreflect.Message {
	mi := &file_wx_miniprogram_qrcode_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUnlimitedQrcodeRes.ProtoReflect.Descriptor instead.
func (*GetUnlimitedQrcodeRes) Descriptor() ([]byte, []int) {
	return file_wx_miniprogram_qrcode_proto_rawDescGZIP(), []int{4}
}

func (x *GetUnlimitedQrcodeRes) GetErrcode() int32 {
	if x != nil {
		return x.Errcode
	}
	return 0
}

func (x *GetUnlimitedQrcodeRes) GetErrmsg() string {
	if x != nil {
		return x.Errmsg
	}
	return ""
}

func (x *GetUnlimitedQrcodeRes) GetBuffer() []byte {
	if x != nil {
		return x.Buffer
	}
	return nil
}

type CreateQrcodeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessToken string                `protobuf:"bytes,1,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"` // 接口调用凭证，该参数为 URL 参数，非 Body 参数。access_token和cloudbase_access_token二选一. 如果是第三方代调用请传入authorizer_access_token；cloudbase_access_token可通过getOpenData接口获得
	Body        *CreateQrcodeReq_Body `protobuf:"bytes,3,opt,name=body,proto3" json:"body,omitempty"`
}

func (x *CreateQrcodeReq) Reset() {
	*x = CreateQrcodeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wx_miniprogram_qrcode_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateQrcodeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateQrcodeReq) ProtoMessage() {}

func (x *CreateQrcodeReq) ProtoReflect() protoreflect.Message {
	mi := &file_wx_miniprogram_qrcode_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateQrcodeReq.ProtoReflect.Descriptor instead.
func (*CreateQrcodeReq) Descriptor() ([]byte, []int) {
	return file_wx_miniprogram_qrcode_proto_rawDescGZIP(), []int{5}
}

func (x *CreateQrcodeReq) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *CreateQrcodeReq) GetBody() *CreateQrcodeReq_Body {
	if x != nil {
		return x.Body
	}
	return nil
}

type CreateQrcodeRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Errcode     int32  `protobuf:"varint,1,opt,name=errcode,proto3" json:"errcode,omitempty"`
	Errmsg      string `protobuf:"bytes,2,opt,name=errmsg,proto3" json:"errmsg,omitempty"`
	Buffer      []byte `protobuf:"bytes,3,opt,name=buffer,proto3" json:"buffer,omitempty"`           // 图片 Buffer
	ContentType string `protobuf:"bytes,4,opt,name=contentType,proto3" json:"contentType,omitempty"` // contentType
}

func (x *CreateQrcodeRes) Reset() {
	*x = CreateQrcodeRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wx_miniprogram_qrcode_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateQrcodeRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateQrcodeRes) ProtoMessage() {}

func (x *CreateQrcodeRes) ProtoReflect() protoreflect.Message {
	mi := &file_wx_miniprogram_qrcode_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateQrcodeRes.ProtoReflect.Descriptor instead.
func (*CreateQrcodeRes) Descriptor() ([]byte, []int) {
	return file_wx_miniprogram_qrcode_proto_rawDescGZIP(), []int{6}
}

func (x *CreateQrcodeRes) GetErrcode() int32 {
	if x != nil {
		return x.Errcode
	}
	return 0
}

func (x *CreateQrcodeRes) GetErrmsg() string {
	if x != nil {
		return x.Errmsg
	}
	return ""
}

func (x *CreateQrcodeRes) GetBuffer() []byte {
	if x != nil {
		return x.Buffer
	}
	return nil
}

func (x *CreateQrcodeRes) GetContentType() string {
	if x != nil {
		return x.ContentType
	}
	return ""
}

type QuerySchemeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessToken string               `protobuf:"bytes,1,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
	Body        *QuerySchemeReq_Body `protobuf:"bytes,2,opt,name=body,proto3" json:"body,omitempty"`
}

func (x *QuerySchemeReq) Reset() {
	*x = QuerySchemeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wx_miniprogram_qrcode_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QuerySchemeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuerySchemeReq) ProtoMessage() {}

func (x *QuerySchemeReq) ProtoReflect() protoreflect.Message {
	mi := &file_wx_miniprogram_qrcode_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuerySchemeReq.ProtoReflect.Descriptor instead.
func (*QuerySchemeReq) Descriptor() ([]byte, []int) {
	return file_wx_miniprogram_qrcode_proto_rawDescGZIP(), []int{7}
}

func (x *QuerySchemeReq) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *QuerySchemeReq) GetBody() *QuerySchemeReq_Body {
	if x != nil {
		return x.Body
	}
	return nil
}

type SchemeInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Appid      string `protobuf:"bytes,1,opt,name=appid,proto3" json:"appid,omitempty"`
	Path       string `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	Query      string `protobuf:"bytes,3,opt,name=query,proto3" json:"query,omitempty"`
	CreateTime int64  `protobuf:"varint,4,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	ExpireTime int64  `protobuf:"varint,5,opt,name=expire_time,json=expireTime,proto3" json:"expire_time,omitempty"`
	EnvVersion string `protobuf:"bytes,6,opt,name=env_version,json=envVersion,proto3" json:"env_version,omitempty"`
}

func (x *SchemeInfo) Reset() {
	*x = SchemeInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wx_miniprogram_qrcode_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SchemeInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SchemeInfo) ProtoMessage() {}

func (x *SchemeInfo) ProtoReflect() protoreflect.Message {
	mi := &file_wx_miniprogram_qrcode_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SchemeInfo.ProtoReflect.Descriptor instead.
func (*SchemeInfo) Descriptor() ([]byte, []int) {
	return file_wx_miniprogram_qrcode_proto_rawDescGZIP(), []int{8}
}

func (x *SchemeInfo) GetAppid() string {
	if x != nil {
		return x.Appid
	}
	return ""
}

func (x *SchemeInfo) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *SchemeInfo) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *SchemeInfo) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *SchemeInfo) GetExpireTime() int64 {
	if x != nil {
		return x.ExpireTime
	}
	return 0
}

func (x *SchemeInfo) GetEnvVersion() string {
	if x != nil {
		return x.EnvVersion
	}
	return ""
}

type QuerySchemeRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Errcode     int32       `protobuf:"varint,1,opt,name=errcode,proto3" json:"errcode,omitempty"`
	Errmsg      string      `protobuf:"bytes,2,opt,name=errmsg,proto3" json:"errmsg,omitempty"`
	SchemeInfo  *SchemeInfo `protobuf:"bytes,3,opt,name=scheme_info,json=schemeInfo,proto3" json:"scheme_info,omitempty"`
	VisitOpenid string      `protobuf:"bytes,4,opt,name=visit_openid,json=visitOpenid,proto3" json:"visit_openid,omitempty"`
}

func (x *QuerySchemeRes) Reset() {
	*x = QuerySchemeRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wx_miniprogram_qrcode_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QuerySchemeRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuerySchemeRes) ProtoMessage() {}

func (x *QuerySchemeRes) ProtoReflect() protoreflect.Message {
	mi := &file_wx_miniprogram_qrcode_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuerySchemeRes.ProtoReflect.Descriptor instead.
func (*QuerySchemeRes) Descriptor() ([]byte, []int) {
	return file_wx_miniprogram_qrcode_proto_rawDescGZIP(), []int{9}
}

func (x *QuerySchemeRes) GetErrcode() int32 {
	if x != nil {
		return x.Errcode
	}
	return 0
}

func (x *QuerySchemeRes) GetErrmsg() string {
	if x != nil {
		return x.Errmsg
	}
	return ""
}

func (x *QuerySchemeRes) GetSchemeInfo() *SchemeInfo {
	if x != nil {
		return x.SchemeInfo
	}
	return nil
}

func (x *QuerySchemeRes) GetVisitOpenid() string {
	if x != nil {
		return x.VisitOpenid
	}
	return ""
}

type JumpWxa struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path       string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Query      string `protobuf:"bytes,2,opt,name=query,proto3" json:"query,omitempty"`
	EnvVersion string `protobuf:"bytes,3,opt,name=env_version,json=envVersion,proto3" json:"env_version,omitempty"`
}

func (x *JumpWxa) Reset() {
	*x = JumpWxa{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wx_miniprogram_qrcode_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JumpWxa) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JumpWxa) ProtoMessage() {}

func (x *JumpWxa) ProtoReflect() protoreflect.Message {
	mi := &file_wx_miniprogram_qrcode_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JumpWxa.ProtoReflect.Descriptor instead.
func (*JumpWxa) Descriptor() ([]byte, []int) {
	return file_wx_miniprogram_qrcode_proto_rawDescGZIP(), []int{10}
}

func (x *JumpWxa) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *JumpWxa) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *JumpWxa) GetEnvVersion() string {
	if x != nil {
		return x.EnvVersion
	}
	return ""
}

type GenerateSchemeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessToken string                  `protobuf:"bytes,1,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
	Body        *GenerateSchemeReq_Body `protobuf:"bytes,2,opt,name=body,proto3" json:"body,omitempty"`
}

func (x *GenerateSchemeReq) Reset() {
	*x = GenerateSchemeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wx_miniprogram_qrcode_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenerateSchemeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateSchemeReq) ProtoMessage() {}

func (x *GenerateSchemeReq) ProtoReflect() protoreflect.Message {
	mi := &file_wx_miniprogram_qrcode_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateSchemeReq.ProtoReflect.Descriptor instead.
func (*GenerateSchemeReq) Descriptor() ([]byte, []int) {
	return file_wx_miniprogram_qrcode_proto_rawDescGZIP(), []int{11}
}

func (x *GenerateSchemeReq) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *GenerateSchemeReq) GetBody() *GenerateSchemeReq_Body {
	if x != nil {
		return x.Body
	}
	return nil
}

type GenerateSchemeRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Errcode  int32  `protobuf:"varint,1,opt,name=errcode,proto3" json:"errcode,omitempty"`
	Errmsg   string `protobuf:"bytes,2,opt,name=errmsg,proto3" json:"errmsg,omitempty"`
	Openlink string `protobuf:"bytes,3,opt,name=openlink,proto3" json:"openlink,omitempty"`
}

func (x *GenerateSchemeRes) Reset() {
	*x = GenerateSchemeRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wx_miniprogram_qrcode_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenerateSchemeRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateSchemeRes) ProtoMessage() {}

func (x *GenerateSchemeRes) ProtoReflect() protoreflect.Message {
	mi := &file_wx_miniprogram_qrcode_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateSchemeRes.ProtoReflect.Descriptor instead.
func (*GenerateSchemeRes) Descriptor() ([]byte, []int) {
	return file_wx_miniprogram_qrcode_proto_rawDescGZIP(), []int{12}
}

func (x *GenerateSchemeRes) GetErrcode() int32 {
	if x != nil {
		return x.Errcode
	}
	return 0
}

func (x *GenerateSchemeRes) GetErrmsg() string {
	if x != nil {
		return x.Errmsg
	}
	return ""
}

func (x *GenerateSchemeRes) GetOpenlink() string {
	if x != nil {
		return x.Openlink
	}
	return ""
}

type GetQrcodeReq_Body struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path      string     `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`                             // 扫码进入的小程序页面路径，最大长度 1024 字节，不能为空；对于小游戏，可以只传入 query 部分，来实现传参效果，如：传入 "?foo=bar"，即可在 wx.getLaunchOptionsSync 接口中的 query 参数获取到 {foo:"bar"}。
	Width     int32      `protobuf:"varint,2,opt,name=width,proto3" json:"width,omitempty"`                          // 二维码的宽度，单位 px。默认值为430，最小 280px，最大 1280px
	AutoColor bool       `protobuf:"varint,3,opt,name=auto_color,json=autoColor,proto3" json:"auto_color,omitempty"` // 默认值false；自动配置线条颜色，如果颜色依然是黑色，则说明不建议配置主色调
	LineColor *LineColor `protobuf:"bytes,4,opt,name=line_color,json=lineColor,proto3" json:"line_color,omitempty"`
}

func (x *GetQrcodeReq_Body) Reset() {
	*x = GetQrcodeReq_Body{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wx_miniprogram_qrcode_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetQrcodeReq_Body) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetQrcodeReq_Body) ProtoMessage() {}

func (x *GetQrcodeReq_Body) ProtoReflect() protoreflect.Message {
	mi := &file_wx_miniprogram_qrcode_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetQrcodeReq_Body.ProtoReflect.Descriptor instead.
func (*GetQrcodeReq_Body) Descriptor() ([]byte, []int) {
	return file_wx_miniprogram_qrcode_proto_rawDescGZIP(), []int{1, 0}
}

func (x *GetQrcodeReq_Body) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *GetQrcodeReq_Body) GetWidth() int32 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *GetQrcodeReq_Body) GetAutoColor() bool {
	if x != nil {
		return x.AutoColor
	}
	return false
}

func (x *GetQrcodeReq_Body) GetLineColor() *LineColor {
	if x != nil {
		return x.LineColor
	}
	return nil
}

type GetUnlimitedQrcodeReq_Body struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Scene      string     `protobuf:"bytes,1,opt,name=scene,proto3" json:"scene,omitempty"`                             // 最大32个可见字符，只支持数字，大小写英文以及部分特殊字符：!#$&'()*+,/:;=?@-._~，其它字符请自行编码为合法字符（因不支持%，中文无法使用 urlencode 处理，请使用其他编码方式）
	Page       string     `protobuf:"bytes,2,opt,name=page,proto3" json:"page,omitempty"`                               // 默认是主页，页面 page，例如 pages/index/index，根路径前不要填加 /，不能携带参数（参数请放在 scene 字段里），如果不填写这个字段，默认跳主页面。
	CheckPath  bool       `protobuf:"varint,3,opt,name=check_path,json=checkPath,proto3" json:"check_path,omitempty"`   // 默认是true，检查page 是否存在，为 true 时 page 必须是已经发布的小程序存在的页面（否则报错）；为 false 时允许小程序未发布或者 page 不存在， 但page 有数量上限（60000个）请勿滥用。
	EnvVersion string     `protobuf:"bytes,4,opt,name=env_version,json=envVersion,proto3" json:"env_version,omitempty"` // 要打开的小程序版本。正式版为 "release"，体验版为 "trial"，开发版为 "develop"。默认是正式版。
	Width      int32      `protobuf:"varint,5,opt,name=width,proto3" json:"width,omitempty"`                            // 默认430，二维码的宽度，单位 px，最小 280px，最大 1280px
	AutoColor  bool       `protobuf:"varint,6,opt,name=auto_color,json=autoColor,proto3" json:"auto_color,omitempty"`   // 自动配置线条颜色，如果颜色依然是黑色，则说明不建议配置主色调，默认 false
	LineColor  *LineColor `protobuf:"bytes,7,opt,name=line_color,json=lineColor,proto3" json:"line_color,omitempty"`    // 默认是{"r":0,"g":0,"b":0} 。auto_color 为 false 时生效，使用 rgb 设置颜色 例如 {"r":"xxx","g":"xxx","b":"xxx"} 十进制表示
	IsHyaline  bool       `protobuf:"varint,8,opt,name=is_hyaline,json=isHyaline,proto3" json:"is_hyaline,omitempty"`   // 默认是false，是否需要透明底色，为 true 时，生成透明底色的小程序
}

func (x *GetUnlimitedQrcodeReq_Body) Reset() {
	*x = GetUnlimitedQrcodeReq_Body{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wx_miniprogram_qrcode_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUnlimitedQrcodeReq_Body) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUnlimitedQrcodeReq_Body) ProtoMessage() {}

func (x *GetUnlimitedQrcodeReq_Body) ProtoReflect() protoreflect.Message {
	mi := &file_wx_miniprogram_qrcode_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUnlimitedQrcodeReq_Body.ProtoReflect.Descriptor instead.
func (*GetUnlimitedQrcodeReq_Body) Descriptor() ([]byte, []int) {
	return file_wx_miniprogram_qrcode_proto_rawDescGZIP(), []int{3, 0}
}

func (x *GetUnlimitedQrcodeReq_Body) GetScene() string {
	if x != nil {
		return x.Scene
	}
	return ""
}

func (x *GetUnlimitedQrcodeReq_Body) GetPage() string {
	if x != nil {
		return x.Page
	}
	return ""
}

func (x *GetUnlimitedQrcodeReq_Body) GetCheckPath() bool {
	if x != nil {
		return x.CheckPath
	}
	return false
}

func (x *GetUnlimitedQrcodeReq_Body) GetEnvVersion() string {
	if x != nil {
		return x.EnvVersion
	}
	return ""
}

func (x *GetUnlimitedQrcodeReq_Body) GetWidth() int32 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *GetUnlimitedQrcodeReq_Body) GetAutoColor() bool {
	if x != nil {
		return x.AutoColor
	}
	return false
}

func (x *GetUnlimitedQrcodeReq_Body) GetLineColor() *LineColor {
	if x != nil {
		return x.LineColor
	}
	return nil
}

func (x *GetUnlimitedQrcodeReq_Body) GetIsHyaline() bool {
	if x != nil {
		return x.IsHyaline
	}
	return false
}

type CreateQrcodeReq_Body struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path  string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`   //扫码进入的小程序页面路径，最大长度 128 字节，不能为空；对于小游戏，可以只传入 query 部分，来实现传参效果，如：传入 "?foo=bar"，即可在 wx.getLaunchOptionsSync 接口中的 query 参数获取到 {foo:"bar"}。
	Width string `protobuf:"bytes,2,opt,name=width,proto3" json:"width,omitempty"` // 二维码的宽度，单位 px。最小 280px，最大 1280px;默认是430
}

func (x *CreateQrcodeReq_Body) Reset() {
	*x = CreateQrcodeReq_Body{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wx_miniprogram_qrcode_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateQrcodeReq_Body) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateQrcodeReq_Body) ProtoMessage() {}

func (x *CreateQrcodeReq_Body) ProtoReflect() protoreflect.Message {
	mi := &file_wx_miniprogram_qrcode_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateQrcodeReq_Body.ProtoReflect.Descriptor instead.
func (*CreateQrcodeReq_Body) Descriptor() ([]byte, []int) {
	return file_wx_miniprogram_qrcode_proto_rawDescGZIP(), []int{5, 0}
}

func (x *CreateQrcodeReq_Body) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *CreateQrcodeReq_Body) GetWidth() string {
	if x != nil {
		return x.Width
	}
	return ""
}

type QuerySchemeReq_Body struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Scheme string `protobuf:"bytes,1,opt,name=scheme,proto3" json:"scheme,omitempty"`
}

func (x *QuerySchemeReq_Body) Reset() {
	*x = QuerySchemeReq_Body{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wx_miniprogram_qrcode_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QuerySchemeReq_Body) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuerySchemeReq_Body) ProtoMessage() {}

func (x *QuerySchemeReq_Body) ProtoReflect() protoreflect.Message {
	mi := &file_wx_miniprogram_qrcode_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuerySchemeReq_Body.ProtoReflect.Descriptor instead.
func (*QuerySchemeReq_Body) Descriptor() ([]byte, []int) {
	return file_wx_miniprogram_qrcode_proto_rawDescGZIP(), []int{7, 0}
}

func (x *QuerySchemeReq_Body) GetScheme() string {
	if x != nil {
		return x.Scheme
	}
	return ""
}

type GenerateSchemeReq_Body struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JumpWxa        *JumpWxa `protobuf:"bytes,1,opt,name=jump_wxa,json=jumpWxa,proto3" json:"jump_wxa,omitempty"`
	IsExpire       bool     `protobuf:"varint,2,opt,name=is_expire,json=isExpire,proto3" json:"is_expire,omitempty"`
	ExpireTime     int64    `protobuf:"varint,3,opt,name=expire_time,json=expireTime,proto3" json:"expire_time,omitempty"`
	ExpireType     int32    `protobuf:"varint,4,opt,name=expire_type,json=expireType,proto3" json:"expire_type,omitempty"`
	ExpireInterval int64    `protobuf:"varint,5,opt,name=expire_interval,json=expireInterval,proto3" json:"expire_interval,omitempty"`
}

func (x *GenerateSchemeReq_Body) Reset() {
	*x = GenerateSchemeReq_Body{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wx_miniprogram_qrcode_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenerateSchemeReq_Body) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateSchemeReq_Body) ProtoMessage() {}

func (x *GenerateSchemeReq_Body) ProtoReflect() protoreflect.Message {
	mi := &file_wx_miniprogram_qrcode_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateSchemeReq_Body.ProtoReflect.Descriptor instead.
func (*GenerateSchemeReq_Body) Descriptor() ([]byte, []int) {
	return file_wx_miniprogram_qrcode_proto_rawDescGZIP(), []int{11, 0}
}

func (x *GenerateSchemeReq_Body) GetJumpWxa() *JumpWxa {
	if x != nil {
		return x.JumpWxa
	}
	return nil
}

func (x *GenerateSchemeReq_Body) GetIsExpire() bool {
	if x != nil {
		return x.IsExpire
	}
	return false
}

func (x *GenerateSchemeReq_Body) GetExpireTime() int64 {
	if x != nil {
		return x.ExpireTime
	}
	return 0
}

func (x *GenerateSchemeReq_Body) GetExpireType() int32 {
	if x != nil {
		return x.ExpireType
	}
	return 0
}

func (x *GenerateSchemeReq_Body) GetExpireInterval() int64 {
	if x != nil {
		return x.ExpireInterval
	}
	return 0
}

var File_wx_miniprogram_qrcode_proto protoreflect.FileDescriptor

var file_wx_miniprogram_qrcode_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x77, 0x78, 0x2d, 0x6d, 0x69, 0x6e, 0x69, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d,
	0x2f, 0x71, 0x72, 0x63, 0x6f, 0x64, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x11, 0x61,
	0x70, 0x69, 0x2e, 0x77, 0x65, 0x69, 0x78, 0x69, 0x6e, 0x2e, 0x71, 0x71, 0x2e, 0x63, 0x6f, 0x6d,
	0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e,
	0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x35,
	0x0a, 0x09, 0x4c, 0x69, 0x6e, 0x65, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x0c, 0x0a, 0x01, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x01, 0x72, 0x12, 0x0c, 0x0a, 0x01, 0x67, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x01, 0x67, 0x12, 0x0c, 0x0a, 0x01, 0x62, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x01, 0x62, 0x22, 0xfa, 0x01, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x51, 0x72, 0x63,
	0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x38, 0x0a, 0x04, 0x62, 0x6f, 0x64,
	0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x77, 0x65,
	0x69, 0x78, 0x69, 0x6e, 0x2e, 0x71, 0x71, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x47, 0x65, 0x74, 0x51,
	0x72, 0x63, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x2e, 0x42, 0x6f, 0x64, 0x79, 0x52, 0x04, 0x62,
	0x6f, 0x64, 0x79, 0x1a, 0x8c, 0x01, 0x0a, 0x04, 0x42, 0x6f, 0x64, 0x79, 0x12, 0x12, 0x0a, 0x04,
	0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68,
	0x12, 0x14, 0x0a, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x75, 0x74, 0x6f, 0x5f, 0x63,
	0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x61, 0x75, 0x74, 0x6f,
	0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x3b, 0x0a, 0x0a, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x63, 0x6f,
	0x6c, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x77, 0x65, 0x69, 0x78, 0x69, 0x6e, 0x2e, 0x71, 0x71, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x4c, 0x69,
	0x6e, 0x65, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x52, 0x09, 0x6c, 0x69, 0x6e, 0x65, 0x43, 0x6f, 0x6c,
	0x6f, 0x72, 0x22, 0x58, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x51, 0x72, 0x63, 0x6f, 0x64, 0x65, 0x52,
	0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x72, 0x72, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x07, 0x65, 0x72, 0x72, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x65, 0x72, 0x72, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x65, 0x72,
	0x72, 0x6d, 0x73, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x22, 0x81, 0x03, 0x0a,
	0x15, 0x47, 0x65, 0x74, 0x55, 0x6e, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x65, 0x64, 0x51, 0x72, 0x63,
	0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x41, 0x0a, 0x04, 0x62, 0x6f, 0x64,
	0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x77, 0x65,
	0x69, 0x78, 0x69, 0x6e, 0x2e, 0x71, 0x71, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x47, 0x65, 0x74, 0x55,
	0x6e, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x65, 0x64, 0x51, 0x72, 0x63, 0x6f, 0x64, 0x65, 0x52, 0x65,
	0x71, 0x2e, 0x42, 0x6f, 0x64, 0x79, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x1a, 0x81, 0x02, 0x0a,
	0x04, 0x42, 0x6f, 0x64, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70,
	0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12,
	0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x09, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x50, 0x61, 0x74, 0x68, 0x12, 0x1f,
	0x0a, 0x0b, 0x65, 0x6e, 0x76, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x6e, 0x76, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x14, 0x0a, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x77, 0x69, 0x64, 0x74, 0x68, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x75, 0x74, 0x6f, 0x5f, 0x63, 0x6f,
	0x6c, 0x6f, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x61, 0x75, 0x74, 0x6f, 0x43,
	0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x3b, 0x0a, 0x0a, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x63, 0x6f, 0x6c,
	0x6f, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x77,
	0x65, 0x69, 0x78, 0x69, 0x6e, 0x2e, 0x71, 0x71, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x4c, 0x69, 0x6e,
	0x65, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x52, 0x09, 0x6c, 0x69, 0x6e, 0x65, 0x43, 0x6f, 0x6c, 0x6f,
	0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x68, 0x79, 0x61, 0x6c, 0x69, 0x6e, 0x65, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x48, 0x79, 0x61, 0x6c, 0x69, 0x6e, 0x65,
	0x22, 0x61, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x55, 0x6e, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x65, 0x64,
	0x51, 0x72, 0x63, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x72, 0x72,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x65, 0x72, 0x72, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x72, 0x72, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x65, 0x72, 0x72, 0x6d, 0x73, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x62,
	0x75, 0x66, 0x66, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x62, 0x75, 0x66,
	0x66, 0x65, 0x72, 0x22, 0xa3, 0x01, 0x0a, 0x0f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x51, 0x72,
	0x63, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x3b, 0x0a, 0x04, 0x62, 0x6f,
	0x64, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x77,
	0x65, 0x69, 0x78, 0x69, 0x6e, 0x2e, 0x71, 0x71, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x51, 0x72, 0x63, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x2e, 0x42, 0x6f, 0x64,
	0x79, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x1a, 0x30, 0x0a, 0x04, 0x42, 0x6f, 0x64, 0x79, 0x12,
	0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70,
	0x61, 0x74, 0x68, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x22, 0x7d, 0x0a, 0x0f, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x51, 0x72, 0x63, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07,
	0x65, 0x72, 0x72, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x65,
	0x72, 0x72, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x72, 0x72, 0x6d, 0x73, 0x67,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x65, 0x72, 0x72, 0x6d, 0x73, 0x67, 0x12, 0x16,
	0x0a, 0x06, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06,
	0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x22, 0x8f, 0x01, 0x0a, 0x0e, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x12, 0x21, 0x0a, 0x0c, 0x61,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x3a,
	0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x77, 0x65, 0x69, 0x78, 0x69, 0x6e, 0x2e, 0x71, 0x71, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x2e,
	0x42, 0x6f, 0x64, 0x79, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x1a, 0x1e, 0x0a, 0x04, 0x42, 0x6f,
	0x64, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x65, 0x22, 0xaf, 0x01, 0x0a, 0x0a, 0x53,
	0x63, 0x68, 0x65, 0x6d, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x70,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x70, 0x70, 0x69, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70,
	0x61, 0x74, 0x68, 0x12, 0x14, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x78,
	0x70, 0x69, 0x72, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x65,
	0x6e, 0x76, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x65, 0x6e, 0x76, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0xa5, 0x01, 0x0a,
	0x0e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x12,
	0x18, 0x0a, 0x07, 0x65, 0x72, 0x72, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x07, 0x65, 0x72, 0x72, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x72, 0x72,
	0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x65, 0x72, 0x72, 0x6d, 0x73,
	0x67, 0x12, 0x3e, 0x0a, 0x0b, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x77, 0x65, 0x69,
	0x78, 0x69, 0x6e, 0x2e, 0x71, 0x71, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x53, 0x63, 0x68, 0x65, 0x6d,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x21, 0x0a, 0x0c, 0x76, 0x69, 0x73, 0x69, 0x74, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x69,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x76, 0x69, 0x73, 0x69, 0x74, 0x4f, 0x70,
	0x65, 0x6e, 0x69, 0x64, 0x22, 0x54, 0x0a, 0x07, 0x4a, 0x75, 0x6d, 0x70, 0x57, 0x78, 0x61, 0x12,
	0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70,
	0x61, 0x74, 0x68, 0x12, 0x14, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x6e, 0x76,
	0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x65, 0x6e, 0x76, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0xbd, 0x02, 0x0a, 0x11, 0x47,
	0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x65, 0x52, 0x65, 0x71,
	0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x12, 0x3d, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x29, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x77, 0x65, 0x69, 0x78, 0x69, 0x6e, 0x2e, 0x71,
	0x71, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x53, 0x63,
	0x68, 0x65, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x2e, 0x42, 0x6f, 0x64, 0x79, 0x52, 0x04, 0x62, 0x6f,
	0x64, 0x79, 0x1a, 0xc5, 0x01, 0x0a, 0x04, 0x42, 0x6f, 0x64, 0x79, 0x12, 0x35, 0x0a, 0x08, 0x6a,
	0x75, 0x6d, 0x70, 0x5f, 0x77, 0x78, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x77, 0x65, 0x69, 0x78, 0x69, 0x6e, 0x2e, 0x71, 0x71, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x4a, 0x75, 0x6d, 0x70, 0x57, 0x78, 0x61, 0x52, 0x07, 0x6a, 0x75, 0x6d, 0x70, 0x57,
	0x78, 0x61, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x12,
	0x1f, 0x0a, 0x0b, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x27, 0x0a, 0x0f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x5f, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x76, 0x61, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x65, 0x78, 0x70, 0x69,
	0x72, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x22, 0x61, 0x0a, 0x11, 0x47, 0x65,
	0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x12,
	0x18, 0x0a, 0x07, 0x65, 0x72, 0x72, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x07, 0x65, 0x72, 0x72, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x72, 0x72,
	0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x65, 0x72, 0x72, 0x6d, 0x73,
	0x67, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x70, 0x65, 0x6e, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x70, 0x65, 0x6e, 0x6c, 0x69, 0x6e, 0x6b, 0x32, 0x9b, 0x06,
	0x0a, 0x0d, 0x51, 0x72, 0x63, 0x6f, 0x64, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x88, 0x01, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x51, 0x72, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x1f, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x77, 0x65, 0x69, 0x78, 0x69, 0x6e, 0x2e, 0x71, 0x71, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x47, 0x65, 0x74, 0x51, 0x72, 0x63, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x1f,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x77, 0x65, 0x69, 0x78, 0x69, 0x6e, 0x2e, 0x71, 0x71, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x47, 0x65, 0x74, 0x51, 0x72, 0x63, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x22,
	0x39, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x33, 0x22, 0x2b, 0x2f, 0x77, 0x78, 0x61, 0x2f, 0x67, 0x65,
	0x74, 0x77, 0x78, 0x61, 0x63, 0x6f, 0x64, 0x65, 0x3f, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x3d, 0x7b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x7d, 0x3a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x12, 0xaa, 0x01, 0x0a, 0x12, 0x47,
	0x65, 0x74, 0x55, 0x6e, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x65, 0x64, 0x51, 0x72, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x28, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x77, 0x65, 0x69, 0x78, 0x69, 0x6e, 0x2e, 0x71,
	0x71, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x6e, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x65, 0x64, 0x51, 0x72, 0x63, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x28, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x77, 0x65, 0x69, 0x78, 0x69, 0x6e, 0x2e, 0x71, 0x71, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x47, 0x65, 0x74, 0x55, 0x6e, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x65, 0x64, 0x51, 0x72, 0x63, 0x6f,
	0x64, 0x65, 0x52, 0x65, 0x73, 0x22, 0x40, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x3a, 0x22, 0x32, 0x2f,
	0x77, 0x78, 0x61, 0x2f, 0x67, 0x65, 0x74, 0x77, 0x78, 0x61, 0x63, 0x6f, 0x64, 0x65, 0x75, 0x6e,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x3f, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x3d, 0x7b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x7d, 0x3a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x12, 0xa1, 0x01, 0x0a, 0x0c, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x51, 0x72, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x22, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x77,
	0x65, 0x69, 0x78, 0x69, 0x6e, 0x2e, 0x71, 0x71, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x51, 0x72, 0x63, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x22, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x77, 0x65, 0x69, 0x78, 0x69, 0x6e, 0x2e, 0x71, 0x71, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x51, 0x72, 0x63, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73,
	0x22, 0x49, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x43, 0x22, 0x3b, 0x2f, 0x63, 0x67, 0x69, 0x2d, 0x62,
	0x69, 0x6e, 0x2f, 0x77, 0x78, 0x61, 0x61, 0x70, 0x70, 0x2f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x77, 0x78, 0x61, 0x71, 0x72, 0x63, 0x6f, 0x64, 0x65, 0x3f, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x3d, 0x7b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x7d, 0x3a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x12, 0x8f, 0x01, 0x0a, 0x0b,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x65, 0x12, 0x21, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x77, 0x65, 0x69, 0x78, 0x69, 0x6e, 0x2e, 0x71, 0x71, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x21,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x77, 0x65, 0x69, 0x78, 0x69, 0x6e, 0x2e, 0x71, 0x71, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x65, 0x52, 0x65,
	0x73, 0x22, 0x3a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x34, 0x22, 0x2c, 0x2f, 0x77, 0x78, 0x61, 0x2f,
	0x71, 0x75, 0x65, 0x72, 0x79, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x65, 0x3f, 0x61, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x3d, 0x7b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x7d, 0x3a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x12, 0x9b, 0x01,
	0x0a, 0x0e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x65,
	0x12, 0x24, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x77, 0x65, 0x69, 0x78, 0x69, 0x6e, 0x2e, 0x71, 0x71,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x53, 0x63, 0x68,
	0x65, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x24, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x77, 0x65, 0x69,
	0x78, 0x69, 0x6e, 0x2e, 0x71, 0x71, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72,
	0x61, 0x74, 0x65, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x22, 0x3d, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x37, 0x22, 0x2f, 0x2f, 0x77, 0x78, 0x61, 0x2f, 0x67, 0x65, 0x6e, 0x65, 0x72,
	0x61, 0x74, 0x65, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x65, 0x3f, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x3d, 0x7b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x7d, 0x3a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x42, 0x27, 0x5a, 0x25, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x64, 0x65, 0x76, 0x2d, 0x6f, 0x70,
	0x65, 0x6e, 0x61, 0x70, 0x69, 0x2f, 0x77, 0x78, 0x2d, 0x6d, 0x69, 0x6e, 0x69, 0x70, 0x72, 0x6f,
	0x67, 0x72, 0x61, 0x6d, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_wx_miniprogram_qrcode_proto_rawDescOnce sync.Once
	file_wx_miniprogram_qrcode_proto_rawDescData = file_wx_miniprogram_qrcode_proto_rawDesc
)

func file_wx_miniprogram_qrcode_proto_rawDescGZIP() []byte {
	file_wx_miniprogram_qrcode_proto_rawDescOnce.Do(func() {
		file_wx_miniprogram_qrcode_proto_rawDescData = protoimpl.X.CompressGZIP(file_wx_miniprogram_qrcode_proto_rawDescData)
	})
	return file_wx_miniprogram_qrcode_proto_rawDescData
}

var file_wx_miniprogram_qrcode_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_wx_miniprogram_qrcode_proto_goTypes = []interface{}{
	(*LineColor)(nil),                  // 0: api.weixin.qq.com.LineColor
	(*GetQrcodeReq)(nil),               // 1: api.weixin.qq.com.GetQrcodeReq
	(*GetQrcodeRes)(nil),               // 2: api.weixin.qq.com.GetQrcodeRes
	(*GetUnlimitedQrcodeReq)(nil),      // 3: api.weixin.qq.com.GetUnlimitedQrcodeReq
	(*GetUnlimitedQrcodeRes)(nil),      // 4: api.weixin.qq.com.GetUnlimitedQrcodeRes
	(*CreateQrcodeReq)(nil),            // 5: api.weixin.qq.com.CreateQrcodeReq
	(*CreateQrcodeRes)(nil),            // 6: api.weixin.qq.com.CreateQrcodeRes
	(*QuerySchemeReq)(nil),             // 7: api.weixin.qq.com.QuerySchemeReq
	(*SchemeInfo)(nil),                 // 8: api.weixin.qq.com.SchemeInfo
	(*QuerySchemeRes)(nil),             // 9: api.weixin.qq.com.QuerySchemeRes
	(*JumpWxa)(nil),                    // 10: api.weixin.qq.com.JumpWxa
	(*GenerateSchemeReq)(nil),          // 11: api.weixin.qq.com.GenerateSchemeReq
	(*GenerateSchemeRes)(nil),          // 12: api.weixin.qq.com.GenerateSchemeRes
	(*GetQrcodeReq_Body)(nil),          // 13: api.weixin.qq.com.GetQrcodeReq.Body
	(*GetUnlimitedQrcodeReq_Body)(nil), // 14: api.weixin.qq.com.GetUnlimitedQrcodeReq.Body
	(*CreateQrcodeReq_Body)(nil),       // 15: api.weixin.qq.com.CreateQrcodeReq.Body
	(*QuerySchemeReq_Body)(nil),        // 16: api.weixin.qq.com.QuerySchemeReq.Body
	(*GenerateSchemeReq_Body)(nil),     // 17: api.weixin.qq.com.GenerateSchemeReq.Body
}
var file_wx_miniprogram_qrcode_proto_depIdxs = []int32{
	13, // 0: api.weixin.qq.com.GetQrcodeReq.body:type_name -> api.weixin.qq.com.GetQrcodeReq.Body
	14, // 1: api.weixin.qq.com.GetUnlimitedQrcodeReq.body:type_name -> api.weixin.qq.com.GetUnlimitedQrcodeReq.Body
	15, // 2: api.weixin.qq.com.CreateQrcodeReq.body:type_name -> api.weixin.qq.com.CreateQrcodeReq.Body
	16, // 3: api.weixin.qq.com.QuerySchemeReq.body:type_name -> api.weixin.qq.com.QuerySchemeReq.Body
	8,  // 4: api.weixin.qq.com.QuerySchemeRes.scheme_info:type_name -> api.weixin.qq.com.SchemeInfo
	17, // 5: api.weixin.qq.com.GenerateSchemeReq.body:type_name -> api.weixin.qq.com.GenerateSchemeReq.Body
	0,  // 6: api.weixin.qq.com.GetQrcodeReq.Body.line_color:type_name -> api.weixin.qq.com.LineColor
	0,  // 7: api.weixin.qq.com.GetUnlimitedQrcodeReq.Body.line_color:type_name -> api.weixin.qq.com.LineColor
	10, // 8: api.weixin.qq.com.GenerateSchemeReq.Body.jump_wxa:type_name -> api.weixin.qq.com.JumpWxa
	1,  // 9: api.weixin.qq.com.QrcodeService.GetQrcode:input_type -> api.weixin.qq.com.GetQrcodeReq
	3,  // 10: api.weixin.qq.com.QrcodeService.GetUnlimitedQrcode:input_type -> api.weixin.qq.com.GetUnlimitedQrcodeReq
	5,  // 11: api.weixin.qq.com.QrcodeService.CreateQrcode:input_type -> api.weixin.qq.com.CreateQrcodeReq
	7,  // 12: api.weixin.qq.com.QrcodeService.QueryScheme:input_type -> api.weixin.qq.com.QuerySchemeReq
	11, // 13: api.weixin.qq.com.QrcodeService.GenerateScheme:input_type -> api.weixin.qq.com.GenerateSchemeReq
	2,  // 14: api.weixin.qq.com.QrcodeService.GetQrcode:output_type -> api.weixin.qq.com.GetQrcodeRes
	4,  // 15: api.weixin.qq.com.QrcodeService.GetUnlimitedQrcode:output_type -> api.weixin.qq.com.GetUnlimitedQrcodeRes
	6,  // 16: api.weixin.qq.com.QrcodeService.CreateQrcode:output_type -> api.weixin.qq.com.CreateQrcodeRes
	9,  // 17: api.weixin.qq.com.QrcodeService.QueryScheme:output_type -> api.weixin.qq.com.QuerySchemeRes
	12, // 18: api.weixin.qq.com.QrcodeService.GenerateScheme:output_type -> api.weixin.qq.com.GenerateSchemeRes
	14, // [14:19] is the sub-list for method output_type
	9,  // [9:14] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_wx_miniprogram_qrcode_proto_init() }
func file_wx_miniprogram_qrcode_proto_init() {
	if File_wx_miniprogram_qrcode_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_wx_miniprogram_qrcode_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LineColor); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wx_miniprogram_qrcode_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetQrcodeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wx_miniprogram_qrcode_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetQrcodeRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wx_miniprogram_qrcode_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUnlimitedQrcodeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wx_miniprogram_qrcode_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUnlimitedQrcodeRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wx_miniprogram_qrcode_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateQrcodeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wx_miniprogram_qrcode_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateQrcodeRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wx_miniprogram_qrcode_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QuerySchemeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wx_miniprogram_qrcode_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SchemeInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wx_miniprogram_qrcode_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QuerySchemeRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wx_miniprogram_qrcode_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JumpWxa); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wx_miniprogram_qrcode_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenerateSchemeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wx_miniprogram_qrcode_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenerateSchemeRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wx_miniprogram_qrcode_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetQrcodeReq_Body); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wx_miniprogram_qrcode_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUnlimitedQrcodeReq_Body); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wx_miniprogram_qrcode_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateQrcodeReq_Body); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wx_miniprogram_qrcode_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QuerySchemeReq_Body); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wx_miniprogram_qrcode_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenerateSchemeReq_Body); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_wx_miniprogram_qrcode_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_wx_miniprogram_qrcode_proto_goTypes,
		DependencyIndexes: file_wx_miniprogram_qrcode_proto_depIdxs,
		MessageInfos:      file_wx_miniprogram_qrcode_proto_msgTypes,
	}.Build()
	File_wx_miniprogram_qrcode_proto = out.File
	file_wx_miniprogram_qrcode_proto_rawDesc = nil
	file_wx_miniprogram_qrcode_proto_goTypes = nil
	file_wx_miniprogram_qrcode_proto_depIdxs = nil
}
